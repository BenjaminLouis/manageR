% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_edit_tableUI.R
\name{mod_edit_tableUI}
\alias{mod_edit_tableUI}
\alias{mod_edit_table}
\title{mod_edit_tableUI and mod_edit_table}
\usage{
mod_edit_tableUI(id)

mod_edit_table(input, output, session, data = reactive(NULL),
  width = 250, path, filename)
}
\arguments{
\item{id}{shiny id}

\item{input}{internal}

\item{output}{internal}

\item{session}{internal}

\item{data}{reactive dataframe value}

\item{width}{width of the Input}

\item{path}{reactive string value. The path to the directory where the file will be exported}

\item{filename}{string value. The name of the file when exported}
}
\description{
A shiny module to edit (add, edit, remove rows) a dataframe and
export the result.
It is strongly inspired from \url{https://github.com/cardiomoon/editData}
}
\examples{
library(shiny)
library(DT)
library(readr)
library(tibble)
if (interactive()) {
ui <- fluidPage(
  textInput("mydata","Enter data name",value="mtcars"),
  mod_edit_tableUI("loadfile"),
  h4("Choose a path"),
  textInput("path", value = getwd(), label = NULL),
  h4("Choose a filename (do not forget the extension)"),
  textInput("filename", value = "", label = NULL)
)

server <- function(input, output, session) {
  data <- reactive(data(input$mydata))
  editdata <- callModule(mod_loading_options,"loadfile", data = data, 
  path = reactive(input$path), filename = input$filename)
}

shinyApp(ui, server)
}

}
